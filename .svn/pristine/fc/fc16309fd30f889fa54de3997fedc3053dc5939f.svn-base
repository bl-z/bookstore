<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
    <%
	String path = request.getContextPath();
	String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>Java后端WebSocket的Tomcat实现</title>
    <script type="text/javascript" src="<%=path %>/js/jquery-2.2.1.min.js"></script>
    <style type="text/css">
    	.account{
    		cursor: pointer;
    	}
    	#chatList{
    		border:1px solid black;
    		width: 500px;
    		height: 400px;
    		overflow:scroll;
    	}
    	.selfMsg{
    		color : red;
    		text-align : right;
    	}
    	.otherMsg{
    		color : blue;
    		text-align : left;
    	}
    </style>
</head>
<body>
	当前在线：<div id="clients"></div>
	<button id="ref">刷新</button><br>
		<div id="chatList"></div>
	<div id="write">
	    <input id="text" type="text"/>
	    <button onclick="send()">发送消息</button>
	</div>
    <!-- <button onclick="closeWebSocket()">关闭WebSocket连接</button> -->
    <!-- Welcome<br/>
    <hr/>
    <hr/>
    <div id="message"></div> -->
</body>

<script type="text/javascript">
// 自己
$self = '';
// 发送目标
$target = '';
// 域名、端口号
var hostname = location.hostname;
var port = location.port;
$(function(){
	$("#write").hide();
	
	// ajax获取自己的登录帐号
	$('#ref').click();
	$.ajax({
		url : '<%=basePath%>/loginCtrl/getAdmin/',
		success : function(data) {
			$self = data.adminAccount;
		}
	})
	$("#ref").on('click',function(){
		$.ajax({
			url:'<%=basePath%>mypage/clients/',
			dataType:'json',
			type:'post',
			async:true,
			success:function(data){
				console.log(data);
				console.log(data.value);
				var aList="";
				$.each(data.value,function(i,item){
					aList += "<div class='account' onclick='openChat(this)'>"+item+"</div>";
				})
				$("#clients").html(aList);	
			},
			error:function(msg){
				alert("失败");
			}
		})
	});
	
	
})

var websocket = null;  
//var username = sessionStorage.getItem("name");
 
function openChat(obj){
	$("#write").show();
	$target = $(obj).text();
	$("#text").attr('placeholder','发送给'+$(obj).text());
}
 
//判断当前浏览器是否支持WebSocket  
if ('WebSocket' in window) {  
    websocket = new WebSocket("ws://"+hostname+":"+port+"/bookstore/websocket");  
} else {  
    alert('当前浏览器 Not support websocket')  
}  
 
//连接发生错误的回调方法  
websocket.onerror = function() {  
    console.log("WebSocket连接发生错误");  
};  
  
//连接成功建立的回调方法  
websocket.onopen = function() {  
	console.log("WebSocket连接成功");  
}
//接收到消息的回调方法  
websocket.onmessage = function(event) {
	var info=event.data.split(",");
	$("#chatList").append("<p class='otherMsg'>"+info[1]+" : "+info[0]+"</p>");
	console.log(event.data)
	console.log(info)
}
//连接关闭的回调方法  
websocket.onclose = function() {  
	console.log("WebSocket连接关闭");
}
//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。  
window.onbeforeunload = function() {  
    //closeWebSocket();  
}  
  
//关闭WebSocket连接  
function closeWebSocket() {  
	console.log("close");
    websocket.close();  

} 



    /* var websocket = null;
    //判断当前浏览器是否支持WebSocket
    if ('WebSocket' in window) {
        websocket = new WebSocket("ws://localhost:8080/bookstore/webSocketServer");
    }
    else {
        alert('当前浏览器 Not support websocket')
    }

    //连接发生错误的回调方法
    websocket.onerror = function () {
        setMessageInnerHTML("WebSocket连接发生错误");
    };

    //连接成功建立的回调方法
    websocket.onopen = function () {
        setMessageInnerHTML("WebSocket连接成功");
    }

    //接收到消息的回调方法
    websocket.onmessage = function (event) {
        setMessageInnerHTML(event.data);
    }

    //连接关闭的回调方法
    websocket.onclose = function () {
        setMessageInnerHTML("WebSocket连接关闭");
    }

    //监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。
    window.onbeforeunload = function () {
        closeWebSocket();
    }

    //将消息显示在网页上
    function setMessageInnerHTML(innerHTML) {
        document.getElementById('message').innerHTML += innerHTML + '<br/>';
    }

    //关闭WebSocket连接
    function closeWebSocket() {
        websocket.close();
    }
*/
    //发送消息
    function send() {
	alert('发送')
        var message = document.getElementById('text').value;
        var msg = {};
        msg.from = $self
        msg.To = $target;
        msg.massege = message;
        websocket.send(JSON.stringify(msg));
        $("#chatList").append("<p class='selfMsg'>"+$self+" : "+message+"</p>");
	}
</script>
</html>